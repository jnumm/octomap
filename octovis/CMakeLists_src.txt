
set(CMAKE_INCLUDE_CURRENT_DIR ON)

# Mac OS X seems to require special linker flags:
IF(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
  SET (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -framework OpenGL")
  SET (CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -framework OpenGL")
  SET (CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} -framework OpenGL")
ENDIF(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")

# sources for octovis library
set(viewerlib_SRCS
	src/SceneObject.cpp
	src/PointcloudDrawer.cpp
	src/OcTreeDrawer.cpp
	src/SelectionBox.cpp
	src/TrajectoryDrawer.cpp
	src/ColorOcTreeDrawer.cpp
)

# public headers to be installed
set(octovis_HDRS
  include/octovis/ColorOcTreeDrawer.h
  include/octovis/OcTreeDrawer.h
  include/octovis/OcTreeRecord.h
  include/octovis/PointcloudDrawer.h
  include/octovis/SceneObject.h
  include/octovis/SelectionBox.h
  include/octovis/TrajectoryDrawer.h
)

# sources for viewer binary
set(viewer_SRCS
  src/main.cpp
  src/ViewerGui.cpp
  src/ViewerWidget.cpp
  src/ViewerSettings.cpp
  src/ViewerSettingsPanel.cpp
  src/ViewerSettingsPanelCamera.cpp
  src/CameraFollowMode.cpp
  # Resource files (icons, ...)
  src/icons.qrc
  # MOC srcs:
  include/octovis/ViewerGui.h
  include/octovis/ViewerWidget.h
  include/octovis/ViewerSettings.h
  include/octovis/ViewerSettingsPanel.h
  include/octovis/ViewerSettingsPanelCamera.h
  include/octovis/CameraFollowMode.h
  # let cmake generate ui*.h files from .ui files (Qt Designer):
  include/octovis/ViewerGui.ui
  include/octovis/ViewerSettings.ui
  include/octovis/ViewerSettingsPanel.ui
  include/octovis/ViewerSettingsPanelCamera.ui
)	


# Library target 
add_library(octovis-static STATIC ${viewerlib_SRCS})
target_link_libraries(octovis-static
  QGLViewer::QGLViewer
  Qt5::Core Qt5::Gui Qt5::OpenGL Qt5::Widgets Qt5::Xml
)
set_target_properties(octovis-static PROPERTIES OUTPUT_NAME octovis)

add_library(octovis-shared SHARED ${viewerlib_SRCS})
target_link_libraries(octovis-shared
  QGLViewer::QGLViewer
  Qt5::Core Qt5::Gui Qt5::OpenGL Qt5::Widgets Qt5::Xml
  ${OPENGL_gl_LIBRARY} 
  ${OPENGL_glu_LIBRARY} 
  ${OCTOMAP_LIBRARIES}
)
set_target_properties(octovis-shared PROPERTIES
  OUTPUT_NAME octovis
  VERSION ${OCTOVIS_VERSION}
  SOVERSION ${OCTOVIS_SOVERSION}
)

# directly depend on the octomap library target when building the
# complete distribution, so it is recompiled as needed
if (CMAKE_PROJECT_NAME STREQUAL "octomap-distribution")
  ADD_DEPENDENCIES(octovis-static octomap-static)
  ADD_DEPENDENCIES(octovis-shared octomap)
endif()


add_executable(octovis ${viewer_SRCS})

set_target_properties(octovis PROPERTIES AUTOMOC ON AUTORCC ON AUTOUIC ON)

target_link_libraries(octovis 
  QGLViewer::QGLViewer
  Qt5::Core Qt5::Gui Qt5::OpenGL Qt5::Widgets Qt5::Xml
#  ${OPENGL_gl_LIBRARY}
#  ${OPENGL_glu_LIBRARY}
  ${OCTOMAP_LIBRARIES}
  octovis-shared
)

# special handling of MacOS X:
IF(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
  add_custom_command(TARGET octovis POST_BUILD
    COMMAND install_name_tool -change libQGLViewer.2.dylib /opt/local/lib/libQGLViewer.2.dylib ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/octovis
  )
ENDIF(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")

if(NOT EXISTS "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/cmake/octovis")
  file(MAKE_DIRECTORY "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/cmake/octovis")
endif()

export(TARGETS octovis octovis-static octovis-shared
  FILE "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/cmake/octovis/octovis-targets.cmake")

install(TARGETS octovis octovis-static octovis-shared
  EXPORT octovis-targets
  INCLUDES DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}"
  ${INSTALL_TARGETS_DEFAULT_ARGS}
)
install(EXPORT octovis-targets DESTINATION "${CMAKE_INSTALL_DATADIR}/octovis")

install(FILES ${octovis_HDRS} DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/octovis")
